[build-system]
requires = [
    "cmake>=3.20",
    "cython",
    "pybind11>=2.6",
    "setuptools>=42",
    "setuptools_scm[toml]>=3.4",
    "scikit-build-core>=0.3"
]
build-backend = "scikit_build_core.build"

[tool.setuptools_scm]
write_to = "src/pyg4ometry/_version.py"

[project]
name = "pyg4ometry"
description = "Geometry package for high energy physics (Geant4, Fluka)"
readme = { file = "README.md", content-type = "text/markdown" }
license = { file = "LICENSE" }
authors = [{ name = "Stewart T. Boogert", email = "stewart.boogert@rhul.ac.uk" }]
maintainers = [{ name = "Stewart T. Boogert", email = "stewart.boogert@rhul.ac.uk"  }]
dynamic = ["version"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: MacOS",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Software Development",
]
requires-python = ">=3.6.8"
dependencies = [
    "importlib-resources",
    "antlr4-python3-runtime==4.9",
    "configparser",
    "matplotlib",
    "networkx>=3",
    "numpy",
    "pandas",
    "scipy",
    "sympy>=1.7",
    "testtools",
    "vtk",
]

[project.urls]
Homepage = "https://github.com/g4edge/pyg4ometry"
Documentation = "https://pyg4ometry.readthedocs.io/"
"Bug Tracker" = "https://github.com/g4edge/pyg4ometry/issues"

[project.optional-dependencies]
all = ["pyg4ometry[docs,test]"]
docs = [
    "furo",
    "myst-parser",
    "sphinx",
    "sphinx-copybutton",
    "sphinx-inline-tabs",
]
test = [
    "g4edge-testdata",
    "pre-commit",
    "pytest>=6.0",
    "pytest-cov",
]

[tool.setuptools]
include-package-data = true
zip-safe = false

[tool.setuptools.package-data]
"pyg4ometry.convert" = ["src/pyg4ometry/convert/*.csv"]
"pyg4ometry.fluka" = ["src/pyg4ometry/fluka/*.flair"]
"pyg4ometry.geant4" = ["src/pyg4ometry/geant4/*.txt"]
"pyg4ometry.visualisation" = ["src/pyg4ometry/visualisation/*.ini"]

[tool.scikit-build]
build-dir = "build/{cache_tag}"
cmake.minimum-version = "3.20"
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = "error"
log_cli_level = "info"
testpaths = "tests"

[tool.ruff]
select = [
  # "E",
  # "F",
  "W", # flake8
  # "B",           # flake8-bugbear
  # "I",           # isort
  # "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  # "ICN",         # flake8-import-conventions
  "ISC",         # flake8-implicit-str-concat
  # "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  # "PL",          # pylint
  "PT",          # flake8-pytest-style
  # "PTH",         # flake8-use-pathlib
  # "RET",         # flake8-return
  "RUF",         # Ruff-specific
  # "SIM",         # flake8-simplify
  # "T20",         # flake8-print
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
  "NPY",         # NumPy specific rules
  # "PD",          # pandas-vet
]
extend-ignore = [
  "PLR",    # Design related pylint codes
  "E501",   # Line too long
  "PT004",  # Use underscore for non-returning fixture (use usefixture instead)
]
target-version = "py37"
src = ["src"]
unfixable = [
  "T20",  # Removes print statements
  "F841", # Removes unused variables
]
exclude = []
flake8-unused-arguments.ignore-variadic-names = true
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.per-file-ignores]
"tests/**" = ["T20"]

[tool.cibuildwheel]
manylinux-x86_64-image = "g4edge/pyg4ometry-manylinux2014_x86_64:latest"
build = ["*macosx*", "*manylinux_x86_64"]
skip = ["cp36-*"]

[tool.cibuildwheel.macos]
before-all = ".github/bin/install-deps-macos.sh"
